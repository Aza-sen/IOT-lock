/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/e16efd64-40fd-4158-b3cd-4ab7eb04d3cf 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  bool lock1;
  bool lock2;
  bool lock3;
  bool lock4;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

int L1 = D0;
int L2 = D1;
int L3 = D2;
int L4 = D3; 

#include "thingProperties.h"

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 
  pinMode(L1, OUTPUT);
  pinMode(L2, OUTPUT);
  pinMode(L3, OUTPUT);
  pinMode(L4, OUTPUT);
  digitalWrite(L1, HIGH);
  digitalWrite(L2, HIGH);
  digitalWrite(L3, HIGH);
  digitalWrite(L4, HIGH);
  

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  
  
}



/*
  Since Lock1 is READ_WRITE variable, onLock1Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onLock1Change()  {
   // Assigning incoming value from pin V0 to a variable
   if (lock1) {
      digitalWrite(L1, LOW);
      
      // Turn LED on.
    } 
    else {
      digitalWrite(L1, HIGH);
      
      // Turn LED off.
   }
  // Add your code here to act upon Lock1 change
}

/*
  Since Lock2 is READ_WRITE variable, onLock2Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onLock2Change()  {
     if (lock2) {
      digitalWrite(L2, LOW);
      
      // Turn LED on.
    } 
    else {
      digitalWrite(L2, HIGH);
      
      // Turn LED off.
   }
  // Add your code here to act upon Lock2 change
}

/*
  Since Lock3 is READ_WRITE variable, onLock3Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onLock3Change()  {
     if (lock3) {
      digitalWrite(L3, LOW);
      
      // Turn LED on.
    } 
    else {
      digitalWrite(L3, HIGH);
      
      // Turn LED off.
   }
  // Add your code here to act upon Lock3 change
}

/*
  Since Lock4 is READ_WRITE variable, onLock4Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onLock4Change()  {
     if (lock4) {
      digitalWrite(L4, LOW);
      
      // Turn LED on.
    } 
    else {
      digitalWrite(L4, HIGH);
      
      // Turn LED off.
   }
  // Add your code here to act upon Lock4 change
}